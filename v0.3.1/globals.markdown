## Глобальные объекты

Эти объекты доступны в глобальной области видимости
и могут быть использованы в любом месте кода.

### global

Глобальный объект.

### process

Объект процесса. Большая часть данных процесса находится именно здесь.
См. секцию `'process'` ниже.

### require()

Подключает модули. См. секцию `'Модули'`.

### require.resolve()

Использует внутреннюю логику `require()` для определение местоположения модуля,
но не загружает его, а возвращает имя файла, содержащего модуль.

### require.paths

Массив путей поиска для `require()`. Этот массив может быть изменён
для добавления пользовательских путей.

Пример: добавить новый путь в начало массива.

    require.paths.unshift('/usr/local/node');


### __filename

Имя исполняемого скрипта. Это абсолютный путь, и не всегда это будет то же имя, которое было передано в аргументе командной строки.

Пример: запускаем `node example.js` из папки `/Users/mjr`.

    console.log(__filename);
    // /Users/mjr/example.js

### __dirname

Имя директории исполняемого скрипта.

Пример: запускаем `node example.js` из папки `/Users/mjr`.

    console.log(__dirname);
    // /Users/mjr


### module

Ссылка на текущий модуль (типа `process.Module`). В частности, `module.exports` —
то же самое, что и объект `exports`. См. `src/process.js` для подробной информации.

